{"ast":null,"code":"var _jsxFileName = \"D:\\\\it\\\\itIncubator\\\\dopy\\\\sprint2\\\\extraTask0502\\\\src\\\\Todolist.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Button } from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = props => {\n  _s();\n  const {\n    title,\n    tasks,\n    filter,\n    removeTask,\n    changeFilter,\n    addTask,\n    changeTaskStatus,\n    todolistId,\n    removeTodolist\n  } = props;\n  const [taskTitle, setTaskTitle] = useState('');\n  const [error, setError] = useState(null);\n  const addTaskHandler = () => {\n    if (taskTitle.trim() !== '') {\n      addTask(taskTitle.trim(), todolistId);\n      setTaskTitle('');\n    } else {\n      setError('Title is required');\n    }\n  };\n  const changeTaskTitleHandler = event => {\n    setTaskTitle(event.currentTarget.value);\n  };\n  const addTaskOnKeyUpHandler = event => {\n    setError(null);\n    if (event.key === 'Enter') {\n      addTaskHandler();\n    }\n  };\n  const changeFilterTasksHandler = filter => {\n    changeFilter(filter, props.todolistId);\n  };\n  const removeTodolistHandler = () => {\n    removeTodolist(todolistId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todolist-title-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: 'x',\n        onClick: removeTodolistHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: error ? 'error' : '',\n        value: taskTitle,\n        onChange: changeTaskTitleHandler,\n        onKeyUp: addTaskOnKeyUpHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: '+',\n        onClick: addTaskHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'error-message',\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0422\\u0430\\u0441\\u043E\\u043A \\u043D\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 8\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => {\n        const removeTaskHandler = () => {\n          removeTask(task.id, todolistId);\n        };\n        const changeTaskStatusHandler = e => {\n          const newStatusValue = e.currentTarget.checked;\n          changeTaskStatus(task.id, newStatusValue, todolistId);\n        };\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: task.isDone ? 'is-done' : '',\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.isDone,\n            onChange: changeTaskStatusHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: removeTaskHandler,\n            title: 'x'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 9\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: filter === 'all' ? 'active-filter' : '',\n        title: 'All',\n        onClick: () => changeFilterTasksHandler('all')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: filter === 'active' ? 'active-filter' : '',\n        title: 'Active',\n        onClick: () => changeFilterTasksHandler('active')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: filter === 'completed' ? 'active-filter' : '',\n        title: 'Completed',\n        onClick: () => changeFilterTasksHandler('completed')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n};\n_s(Todolist, \"cy820ItRk+CRS9IFI86bSUIUX/g=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["useState","Button","jsxDEV","_jsxDEV","Todolist","props","_s","title","tasks","filter","removeTask","changeFilter","addTask","changeTaskStatus","todolistId","removeTodolist","taskTitle","setTaskTitle","error","setError","addTaskHandler","trim","changeTaskTitleHandler","event","currentTarget","value","addTaskOnKeyUpHandler","key","changeFilterTasksHandler","removeTodolistHandler","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","onKeyUp","length","map","task","removeTaskHandler","id","changeTaskStatusHandler","e","newStatusValue","checked","isDone","type","_c","$RefreshReg$"],"sources":["D:/it/itIncubator/dopy/sprint2/extraTask0502/src/Todolist.tsx"],"sourcesContent":["import {FilterValuesType, TaskType} from \"./App\";\r\nimport {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport {Button} from \"./Button\";\r\n\r\ntype PropsType = {\r\n\ttitle: string\r\n\ttodolistId: string\r\n\ttasks: TaskType[]\r\n\tremoveTask: (taskId: string, todolistId: string) => void\r\n\tchangeFilter: (filter: FilterValuesType, todolistId: string) => void\r\n\taddTask: (title: string, todolistId: string) => void\r\n\tchangeTaskStatus: (taskId: string, taskStatus: boolean, todolistId: string) => void\r\n\tfilter: FilterValuesType\r\n\tremoveTodolist: (todolistId: string) => void\r\n}\r\n\r\nexport const Todolist = (props: PropsType) => {\r\n\tconst {\r\n\t\ttitle,\r\n\t\ttasks,\r\n\t\tfilter,\r\n\t\tremoveTask,\r\n\t\tchangeFilter,\r\n\t\taddTask,\r\n\t\tchangeTaskStatus,\r\n\t\ttodolistId,\r\n\t\tremoveTodolist\r\n\t} = props\r\n\r\n\tconst [taskTitle, setTaskTitle] = useState('')\r\n\tconst [error, setError] = useState<string | null>(null)\r\n\r\n\tconst addTaskHandler = () => {\r\n\t\tif (taskTitle.trim() !== '') {\r\n\t\t\taddTask(taskTitle.trim(), todolistId)\r\n\t\t\tsetTaskTitle('')\r\n\t\t} else {\r\n\t\t\tsetError('Title is required')\r\n\t\t}\r\n\t}\r\n\r\n\tconst changeTaskTitleHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetTaskTitle(event.currentTarget.value)\r\n\t}\r\n\r\n\tconst addTaskOnKeyUpHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tsetError(null)\r\n\t\tif (event.key === 'Enter') {\r\n\t\t\taddTaskHandler()\r\n\t\t}\r\n\t}\r\n\r\n\tconst changeFilterTasksHandler = (filter: FilterValuesType) => {\r\n\t\tchangeFilter(filter, props.todolistId)\r\n\t}\r\n\r\n\tconst removeTodolistHandler = () => {\r\n\t\tremoveTodolist(todolistId)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={\"todolist-title-container\"}>\r\n\t\t\t\t<h3>{title}</h3>\r\n\t\t\t\t<Button title={'x'} onClick={removeTodolistHandler}/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={error ? 'error' : ''}\r\n\t\t\t\t\tvalue={taskTitle}\r\n\t\t\t\t\tonChange={changeTaskTitleHandler}\r\n\t\t\t\t\tonKeyUp={addTaskOnKeyUpHandler}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button title={'+'} onClick={addTaskHandler}/>\r\n\t\t\t\t{error && <div className={'error-message'}>{error}</div>}\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\ttasks.length === 0\r\n\t\t\t\t\t? <p>Тасок нет</p>\r\n\t\t\t\t\t: <ul>\r\n\t\t\t\t\t\t{tasks.map((task) => {\r\n\r\n\t\t\t\t\t\t\tconst removeTaskHandler = () => {\r\n\t\t\t\t\t\t\t\tremoveTask(task.id, todolistId)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst changeTaskStatusHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\t\t\t\t\tconst newStatusValue = e.currentTarget.checked\r\n\t\t\t\t\t\t\t\tchangeTaskStatus(task.id, newStatusValue, todolistId)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn <li key={task.id} className={task.isDone ? 'is-done' : ''}>\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" checked={task.isDone} onChange={changeTaskStatusHandler}/>\r\n\t\t\t\t\t\t\t\t<span>{task.title}</span>\r\n\t\t\t\t\t\t\t\t<Button onClick={removeTaskHandler} title={'x'}/>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t}\r\n\t\t\t<div>\r\n\t\t\t\t<Button className={filter === 'all' ? 'active-filter' : ''} title={'All'}\r\n\t\t\t\t        onClick={() => changeFilterTasksHandler('all')}/>\r\n\t\t\t\t<Button className={filter === 'active' ? 'active-filter' : ''} title={'Active'}\r\n\t\t\t\t        onClick={() => changeFilterTasksHandler('active')}/>\r\n\t\t\t\t<Button className={filter === 'completed' ? 'active-filter' : ''} title={'Completed'}\r\n\t\t\t\t        onClick={() => changeFilterTasksHandler('completed')}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}